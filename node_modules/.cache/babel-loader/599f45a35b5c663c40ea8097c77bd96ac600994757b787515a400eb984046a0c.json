{"ast":null,"code":"import _objectSpread from\"C:/Users/hwfre/OneDrive/Desktop/\\uAC1C\\uC778/tlqnstjf/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import Calendar from'./components/Calendar';import EventList from'./components/EventList';import EventForm from'./components/EventForm';import Chatbot from'./components/Chatbot';import{format,isSameDay,isToday,addDays}from'date-fns';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[events,setEvents]=useState([]);const[selectedDate,setSelectedDate]=useState(new Date());const[showEventForm,setShowEventForm]=useState(false);const[editingEvent,setEditingEvent]=useState(null);const[activeTab,setActiveTab]=useState('events');// 'events' 또는 'chatbot'\nconst[notification,setNotification]=useState(null);const[currentMonth,setCurrentMonth]=useState(new Date());// 로컬 스토리지에서 이벤트 불러오기\nuseEffect(()=>{const savedEvents=localStorage.getItem('events');if(savedEvents){try{const parsedEvents=JSON.parse(savedEvents);// 날짜 문자열을 Date 객체로 변환\nconst eventsWithDates=parsedEvents.map(event=>_objectSpread(_objectSpread({},event),{},{date:new Date(event.date)}));setEvents(eventsWithDates);}catch(error){console.error('Failed to parse saved events:',error);}}},[]);// 이벤트가 변경될 때마다 로컬 스토리지에 저장\nuseEffect(()=>{try{localStorage.setItem('events',JSON.stringify(events));}catch(error){console.error('Failed to save events:',error);}},[events]);// 로컬 알림 권한 요청\nuseEffect(()=>{if('Notification'in window){Notification.requestPermission();}},[]);// 마감일 알림 체크\nuseEffect(()=>{const checkDeadlines=()=>{try{const today=new Date();const tomorrow=addDays(today,1);// 내일 마감인 과제들 찾기\nconst tomorrowDeadlines=events.filter(event=>{if(!event||!event.date||!event.type)return false;const eventDate=new Date(event.date);return isSameDay(eventDate,tomorrow)&&event.type==='assignment';});if(tomorrowDeadlines.length>0){// 현재 날짜와 마감일 포맷팅\nconst todayStr=format(today,'yyyy년 M월 d일');const tomorrowStr=format(tomorrow,'yyyy년 M월 d일');// 앱 내부 알림 메시지 생성\nconst appMessage=tomorrowDeadlines.length===1?\"[\".concat(todayStr,\"] \\uB0B4\\uC77C(\").concat(tomorrowStr,\") \\uB9C8\\uAC10 \\uACFC\\uC81C\\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4:\\n\").concat(tomorrowDeadlines[0].title):\"[\".concat(todayStr,\"] \\uB0B4\\uC77C(\").concat(tomorrowStr,\") \\uB9C8\\uAC10 \\uACFC\\uC81C\\uAC00 \\uCD1D \").concat(tomorrowDeadlines.length,\"\\uAC74 \\uC788\\uC2B5\\uB2C8\\uB2E4\");showNotification(appMessage,'warning');// 브라우저 알림 표시\nif('Notification'in window&&Notification.permission==='granted'){try{// 과제 목록 생성\nconst deadlinesList=tomorrowDeadlines.length===1?tomorrowDeadlines[0].title:tomorrowDeadlines.map((event,index)=>\"\".concat(index+1,\". \").concat(event.title)).join('\\n');const notificationOptions={body:\"\\uD604\\uC7AC: \".concat(todayStr,\"\\n\\uB9C8\\uAC10\\uC77C: \").concat(tomorrowStr,\"\\n\\n\").concat(deadlinesList),icon:'/favicon.ico',tag:'deadline-notification',requireInteraction:true};// 이전 알림이 있다면 닫기\nif(window.currentNotification){window.currentNotification.close();}// 새 알림 생성 및 저장\nwindow.currentNotification=new Notification('마감 예정 과제 알림',notificationOptions);}catch(error){console.error('브라우저 알림 생성 중 오류:',error);}}}}catch(error){console.error('마감일 체크 중 오류:',error);}};// 페이지 로드 시 한 번 체크\ncheckDeadlines();// 1시간마다 체크 (3600000ms = 1시간)\nconst intervalId=setInterval(checkDeadlines,3600000);return()=>{clearInterval(intervalId);// 컴포넌트 언마운트 시 알림 정리\nif(window.currentNotification){window.currentNotification.close();}};},[events]);const getEventTypeName=type=>{switch(type){case'assignment':return'과제';case'exam':return'시험';case'lecture':return'강의';case'meeting':return'미팅';case'academic':return'학사일정';case'personal':return'개인일정';default:return'일정';}};const showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';setNotification({message,type});setTimeout(()=>{setNotification(null);},3000);};const addEvent=eventData=>{const newEvent=_objectSpread(_objectSpread({},eventData),{},{id:eventData.id||Date.now().toString(),date:new Date(eventData.date)});if(editingEvent){setEvents(events.map(event=>event.id===editingEvent.id?newEvent:event));showNotification('일정이 수정되었습니다.');}else{setEvents([...events,newEvent]);showNotification('새로운 일정이 추가되었습니다.');}// 일정 추가/수정 후 처리\nsetShowEventForm(false);setEditingEvent(null);setSelectedDate(newEvent.date);setCurrentMonth(newEvent.date);setActiveTab('events');};const deleteEvent=eventId=>{if(window.confirm('이 일정을 삭제하시겠습니까?')){setEvents(events.filter(event=>event.id!==eventId));showNotification('일정이 삭제되었습니다.','warning');}};const editEvent=event=>{setEditingEvent(event);setShowEventForm(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD559\\uC0AC\\uC77C\\uC815 \\uBC0F \\uACFC\\uC81C \\uAD00\\uB9AC \\uCE98\\uB9B0\\uB354\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"notification-container\",children:notification&&/*#__PURE__*/_jsx(\"div\",{className:\"notification \".concat(notification.type),children:notification.message})}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsx(Calendar,{events:events,selectedDate:selectedDate,setSelectedDate:setSelectedDate,currentMonth:currentMonth,setCurrentMonth:setCurrentMonth,onAddEvent:()=>{setEditingEvent(null);setShowEventForm(true);},setActiveTab:setActiveTab}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tab-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='events'?'active':''),onClick:()=>setActiveTab('events'),children:\"\\uC77C\\uC815 \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"button\",{className:\"tab-button \".concat(activeTab==='chatbot'?'active':''),onClick:()=>setActiveTab('chatbot'),children:\"\\uCC57\\uBD07\"})]}),activeTab==='events'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EventList,{events:events.filter(event=>{const eventDate=new Date(event.date);return isSameDay(eventDate,selectedDate);}),onDelete:deleteEvent,onEdit:editEvent}),showEventForm&&/*#__PURE__*/_jsx(EventForm,{selectedDate:selectedDate,onSave:addEvent,onCancel:()=>{setShowEventForm(false);setEditingEvent(null);},event:editingEvent}),!showEventForm&&/*#__PURE__*/_jsx(\"button\",{className:\"add-event-button\",onClick:()=>{setEditingEvent(null);setShowEventForm(true);},children:\"\\uC77C\\uC815 \\uCD94\\uAC00\\uD558\\uAE30\"})]}):/*#__PURE__*/_jsx(Chatbot,{onSave:addEvent})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Calendar","EventList","EventForm","Chatbot","format","isSameDay","isToday","addDays","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","events","setEvents","selectedDate","setSelectedDate","Date","showEventForm","setShowEventForm","editingEvent","setEditingEvent","activeTab","setActiveTab","notification","setNotification","currentMonth","setCurrentMonth","savedEvents","localStorage","getItem","parsedEvents","JSON","parse","eventsWithDates","map","event","_objectSpread","date","error","console","setItem","stringify","window","Notification","requestPermission","checkDeadlines","today","tomorrow","tomorrowDeadlines","filter","type","eventDate","length","todayStr","tomorrowStr","appMessage","concat","title","showNotification","permission","deadlinesList","index","join","notificationOptions","body","icon","tag","requireInteraction","currentNotification","close","intervalId","setInterval","clearInterval","getEventTypeName","message","arguments","undefined","setTimeout","addEvent","eventData","newEvent","id","now","toString","deleteEvent","eventId","confirm","editEvent","className","children","onAddEvent","onClick","onDelete","onEdit","onSave","onCancel"],"sources":["C:/Users/hwfre/OneDrive/Desktop/개인/tlqnstjf/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from './components/Calendar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport Chatbot from './components/Chatbot';\nimport { format, isSameDay, isToday, addDays } from 'date-fns';\nimport './App.css';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [activeTab, setActiveTab] = useState('events'); // 'events' 또는 'chatbot'\n  const [notification, setNotification] = useState(null);\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n\n  // 로컬 스토리지에서 이벤트 불러오기\n  useEffect(() => {\n    const savedEvents = localStorage.getItem('events');\n    if (savedEvents) {\n      try {\n        const parsedEvents = JSON.parse(savedEvents);\n        // 날짜 문자열을 Date 객체로 변환\n        const eventsWithDates = parsedEvents.map(event => ({\n          ...event,\n          date: new Date(event.date)\n        }));\n        setEvents(eventsWithDates);\n      } catch (error) {\n        console.error('Failed to parse saved events:', error);\n      }\n    }\n  }, []);\n\n  // 이벤트가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    try {\n      localStorage.setItem('events', JSON.stringify(events));\n    } catch (error) {\n      console.error('Failed to save events:', error);\n    }\n  }, [events]);\n\n  // 로컬 알림 권한 요청\n  useEffect(() => {\n    if ('Notification' in window) {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // 마감일 알림 체크\n  useEffect(() => {\n    const checkDeadlines = () => {\n      try {\n        const today = new Date();\n        const tomorrow = addDays(today, 1);\n        \n        // 내일 마감인 과제들 찾기\n        const tomorrowDeadlines = events.filter(event => {\n          if (!event || !event.date || !event.type) return false;\n          const eventDate = new Date(event.date);\n          return isSameDay(eventDate, tomorrow) && event.type === 'assignment';\n        });\n\n        if (tomorrowDeadlines.length > 0) {\n          // 현재 날짜와 마감일 포맷팅\n          const todayStr = format(today, 'yyyy년 M월 d일');\n          const tomorrowStr = format(tomorrow, 'yyyy년 M월 d일');\n          \n          // 앱 내부 알림 메시지 생성\n          const appMessage = tomorrowDeadlines.length === 1\n            ? `[${todayStr}] 내일(${tomorrowStr}) 마감 과제가 있습니다:\\n${tomorrowDeadlines[0].title}`\n            : `[${todayStr}] 내일(${tomorrowStr}) 마감 과제가 총 ${tomorrowDeadlines.length}건 있습니다`;\n          \n          showNotification(appMessage, 'warning');\n\n          // 브라우저 알림 표시\n          if ('Notification' in window && Notification.permission === 'granted') {\n            try {\n              // 과제 목록 생성\n              const deadlinesList = tomorrowDeadlines.length === 1 \n                ? tomorrowDeadlines[0].title\n                : tomorrowDeadlines\n                    .map((event, index) => `${index + 1}. ${event.title}`)\n                    .join('\\n');\n\n              const notificationOptions = {\n                body: `현재: ${todayStr}\\n마감일: ${tomorrowStr}\\n\\n${deadlinesList}`,\n                icon: '/favicon.ico',\n                tag: 'deadline-notification',\n                requireInteraction: true\n              };\n\n              // 이전 알림이 있다면 닫기\n              if (window.currentNotification) {\n                window.currentNotification.close();\n              }\n\n              // 새 알림 생성 및 저장\n              window.currentNotification = new Notification('마감 예정 과제 알림', notificationOptions);\n            } catch (error) {\n              console.error('브라우저 알림 생성 중 오류:', error);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('마감일 체크 중 오류:', error);\n      }\n    };\n\n    // 페이지 로드 시 한 번 체크\n    checkDeadlines();\n\n    // 1시간마다 체크 (3600000ms = 1시간)\n    const intervalId = setInterval(checkDeadlines, 3600000);\n\n    return () => {\n      clearInterval(intervalId);\n      // 컴포넌트 언마운트 시 알림 정리\n      if (window.currentNotification) {\n        window.currentNotification.close();\n      }\n    };\n  }, [events]);\n\n  const getEventTypeName = (type) => {\n    switch (type) {\n      case 'assignment':\n        return '과제';\n      case 'exam':\n        return '시험';\n      case 'lecture':\n        return '강의';\n      case 'meeting':\n        return '미팅';\n      case 'academic':\n        return '학사일정';\n      case 'personal':\n        return '개인일정';\n      default:\n        return '일정';\n    }\n  };\n\n  const showNotification = (message, type = 'success') => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 3000);\n  };\n\n  const addEvent = (eventData) => {\n    const newEvent = {\n      ...eventData,\n      id: eventData.id || Date.now().toString(),\n      date: new Date(eventData.date)\n    };\n\n    if (editingEvent) {\n      setEvents(events.map(event => \n        event.id === editingEvent.id ? newEvent : event\n      ));\n      showNotification('일정이 수정되었습니다.');\n    } else {\n      setEvents([...events, newEvent]);\n      showNotification('새로운 일정이 추가되었습니다.');\n    }\n\n    // 일정 추가/수정 후 처리\n    setShowEventForm(false);\n    setEditingEvent(null);\n    setSelectedDate(newEvent.date);\n    setCurrentMonth(newEvent.date);\n    setActiveTab('events');\n  };\n\n  const deleteEvent = (eventId) => {\n    if (window.confirm('이 일정을 삭제하시겠습니까?')) {\n      setEvents(events.filter(event => event.id !== eventId));\n      showNotification('일정이 삭제되었습니다.', 'warning');\n    }\n  };\n\n  const editEvent = (event) => {\n    setEditingEvent(event);\n    setShowEventForm(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>학사일정 및 과제 관리 캘린더</h1>\n      </header>\n      <div className=\"notification-container\">\n        {notification && (\n          <div className={`notification ${notification.type}`}>\n            {notification.message}\n          </div>\n        )}\n      </div>\n      <main className=\"app-main\">\n        <Calendar \n          events={events} \n          selectedDate={selectedDate}\n          setSelectedDate={setSelectedDate}\n          currentMonth={currentMonth}\n          setCurrentMonth={setCurrentMonth}\n          onAddEvent={() => {\n            setEditingEvent(null);\n            setShowEventForm(true);\n          }}\n          setActiveTab={setActiveTab}\n        />\n        <div className=\"sidebar\">\n          <div className=\"tab-navigation\">\n            <button \n              className={`tab-button ${activeTab === 'events' ? 'active' : ''}`}\n              onClick={() => setActiveTab('events')}\n            >\n              일정 목록\n            </button>\n            <button \n              className={`tab-button ${activeTab === 'chatbot' ? 'active' : ''}`}\n              onClick={() => setActiveTab('chatbot')}\n            >\n              챗봇\n            </button>\n          </div>\n\n          {activeTab === 'events' ? (\n            <>\n              <EventList \n                events={events.filter(event => {\n                  const eventDate = new Date(event.date);\n                  return isSameDay(eventDate, selectedDate);\n                })}\n                onDelete={deleteEvent}\n                onEdit={editEvent}\n              />\n              {showEventForm && (\n                <EventForm \n                  selectedDate={selectedDate}\n                  onSave={addEvent}\n                  onCancel={() => {\n                    setShowEventForm(false);\n                    setEditingEvent(null);\n                  }}\n                  event={editingEvent}\n                />\n              )}\n              {!showEventForm && (\n                <button \n                  className=\"add-event-button\"\n                  onClick={() => {\n                    setEditingEvent(null);\n                    setShowEventForm(true);\n                  }}\n                >\n                  일정 추가하기\n                </button>\n              )}\n            </>\n          ) : (\n            <Chatbot onSave={addEvent} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}