{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hwfre\\\\OneDrive\\\\Desktop\\\\\\uAC1C\\uC778\\\\tlqnstjf\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from './components/Calendar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport { format, isSameDay, isToday, addDays } from 'date-fns';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  // 로컬 스토리지에서 이벤트 불러오기\n  useEffect(() => {\n    const savedEvents = localStorage.getItem('events');\n    if (savedEvents) {\n      setEvents(JSON.parse(savedEvents));\n    }\n  }, []);\n\n  // 이벤트가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n\n  // 마감일 알림 체크\n  useEffect(() => {\n    const checkDeadlines = () => {\n      const today = new Date();\n      const tomorrow = addDays(today, 1);\n      events.forEach(event => {\n        const eventDate = new Date(event.date);\n\n        // 마감일이 오늘인 경우\n        if (isToday(eventDate)) {\n          alert(`[마감일 알림] 오늘이 \"${event.title}\" ${getEventTypeName(event.type)}의 마감일입니다!`);\n        }\n        // 마감일이 내일인 경우\n        else if (isSameDay(eventDate, tomorrow)) {\n          alert(`[마감일 알림] 내일이 \"${event.title}\" ${getEventTypeName(event.type)}의 마감일입니다!`);\n        }\n      });\n    };\n\n    // 페이지 로드 시 한 번 체크\n    checkDeadlines();\n\n    // 매일 자정에 체크\n    const now = new Date();\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const timeToMidnight = tomorrow.getTime() - now.getTime();\n    const midnightTimeout = setTimeout(() => {\n      checkDeadlines();\n      // 이후 24시간마다 체크\n      const dailyInterval = setInterval(checkDeadlines, 24 * 60 * 60 * 1000);\n      return () => clearInterval(dailyInterval);\n    }, timeToMidnight);\n    return () => clearTimeout(midnightTimeout);\n  }, [events]);\n  const getEventTypeName = type => {\n    switch (type) {\n      case 'assignment':\n        return '과제';\n      case 'exam':\n        return '시험';\n      case 'lecture':\n        return '강의';\n      case 'meeting':\n        return '미팅';\n      case 'academic':\n        return '학사일정';\n      case 'personal':\n        return '개인일정';\n      default:\n        return '일정';\n    }\n  };\n  const addEvent = eventData => {\n    if (editingEvent) {\n      setEvents(events.map(event => event.id === editingEvent.id ? eventData : event));\n    } else {\n      setEvents([...events, eventData]);\n    }\n    setShowEventForm(false);\n    setEditingEvent(null);\n  };\n  const deleteEvent = eventId => {\n    if (window.confirm('이 일정을 삭제하시겠습니까?')) {\n      setEvents(events.filter(event => event.id !== eventId));\n    }\n  };\n  const editEvent = event => {\n    setEditingEvent(event);\n    setShowEventForm(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD559\\uC0AC\\uC77C\\uC815 \\uBC0F \\uACFC\\uC81C \\uAD00\\uB9AC \\uCE98\\uB9B0\\uB354\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        events: events,\n        selectedDate: selectedDate,\n        setSelectedDate: setSelectedDate,\n        onAddEvent: () => {\n          setEditingEvent(null);\n          setShowEventForm(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(EventList, {\n          events: events.filter(event => {\n            const eventDate = new Date(event.date);\n            return eventDate.getDate() === selectedDate.getDate() && eventDate.getMonth() === selectedDate.getMonth() && eventDate.getFullYear() === selectedDate.getFullYear();\n          }),\n          onDelete: deleteEvent,\n          onEdit: editEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), showEventForm && /*#__PURE__*/_jsxDEV(EventForm, {\n          selectedDate: selectedDate,\n          onSave: addEvent,\n          onCancel: () => {\n            setShowEventForm(false);\n            setEditingEvent(null);\n          },\n          event: editingEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), !showEventForm && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-event-button\",\n          onClick: () => {\n            setEditingEvent(null);\n            setShowEventForm(true);\n          },\n          children: \"\\uC77C\\uC815 \\uCD94\\uAC00\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j0o1vAXivbfGewFF0ATAXlJgcgA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","EventList","EventForm","format","isSameDay","isToday","addDays","jsxDEV","_jsxDEV","App","_s","events","setEvents","selectedDate","setSelectedDate","Date","showEventForm","setShowEventForm","editingEvent","setEditingEvent","savedEvents","localStorage","getItem","JSON","parse","setItem","stringify","checkDeadlines","today","tomorrow","forEach","event","eventDate","date","alert","title","getEventTypeName","type","now","getFullYear","getMonth","getDate","timeToMidnight","getTime","midnightTimeout","setTimeout","dailyInterval","setInterval","clearInterval","clearTimeout","addEvent","eventData","map","id","deleteEvent","eventId","window","confirm","filter","editEvent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddEvent","onDelete","onEdit","onSave","onCancel","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hwfre/OneDrive/Desktop/개인/tlqnstjf/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from './components/Calendar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport { format, isSameDay, isToday, addDays } from 'date-fns';\nimport './App.css';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showEventForm, setShowEventForm] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  // 로컬 스토리지에서 이벤트 불러오기\n  useEffect(() => {\n    const savedEvents = localStorage.getItem('events');\n    if (savedEvents) {\n      setEvents(JSON.parse(savedEvents));\n    }\n  }, []);\n\n  // 이벤트가 변경될 때마다 로컬 스토리지에 저장\n  useEffect(() => {\n    localStorage.setItem('events', JSON.stringify(events));\n  }, [events]);\n\n  // 마감일 알림 체크\n  useEffect(() => {\n    const checkDeadlines = () => {\n      const today = new Date();\n      const tomorrow = addDays(today, 1);\n\n      events.forEach(event => {\n        const eventDate = new Date(event.date);\n        \n        // 마감일이 오늘인 경우\n        if (isToday(eventDate)) {\n          alert(`[마감일 알림] 오늘이 \"${event.title}\" ${getEventTypeName(event.type)}의 마감일입니다!`);\n        }\n        // 마감일이 내일인 경우\n        else if (isSameDay(eventDate, tomorrow)) {\n          alert(`[마감일 알림] 내일이 \"${event.title}\" ${getEventTypeName(event.type)}의 마감일입니다!`);\n        }\n      });\n    };\n\n    // 페이지 로드 시 한 번 체크\n    checkDeadlines();\n\n    // 매일 자정에 체크\n    const now = new Date();\n    const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    const timeToMidnight = tomorrow.getTime() - now.getTime();\n\n    const midnightTimeout = setTimeout(() => {\n      checkDeadlines();\n      // 이후 24시간마다 체크\n      const dailyInterval = setInterval(checkDeadlines, 24 * 60 * 60 * 1000);\n      return () => clearInterval(dailyInterval);\n    }, timeToMidnight);\n\n    return () => clearTimeout(midnightTimeout);\n  }, [events]);\n\n  const getEventTypeName = (type) => {\n    switch (type) {\n      case 'assignment':\n        return '과제';\n      case 'exam':\n        return '시험';\n      case 'lecture':\n        return '강의';\n      case 'meeting':\n        return '미팅';\n      case 'academic':\n        return '학사일정';\n      case 'personal':\n        return '개인일정';\n      default:\n        return '일정';\n    }\n  };\n\n  const addEvent = (eventData) => {\n    if (editingEvent) {\n      setEvents(events.map(event => \n        event.id === editingEvent.id ? eventData : event\n      ));\n    } else {\n      setEvents([...events, eventData]);\n    }\n    setShowEventForm(false);\n    setEditingEvent(null);\n  };\n\n  const deleteEvent = (eventId) => {\n    if (window.confirm('이 일정을 삭제하시겠습니까?')) {\n      setEvents(events.filter(event => event.id !== eventId));\n    }\n  };\n\n  const editEvent = (event) => {\n    setEditingEvent(event);\n    setShowEventForm(true);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>학사일정 및 과제 관리 캘린더</h1>\n      </header>\n      <main className=\"app-main\">\n        <Calendar \n          events={events} \n          selectedDate={selectedDate}\n          setSelectedDate={setSelectedDate}\n          onAddEvent={() => {\n            setEditingEvent(null);\n            setShowEventForm(true);\n          }}\n        />\n        <div className=\"sidebar\">\n          <EventList \n            events={events.filter(event => {\n              const eventDate = new Date(event.date);\n              return eventDate.getDate() === selectedDate.getDate() &&\n                     eventDate.getMonth() === selectedDate.getMonth() &&\n                     eventDate.getFullYear() === selectedDate.getFullYear();\n            })}\n            onDelete={deleteEvent}\n            onEdit={editEvent}\n          />\n          {showEventForm && (\n            <EventForm \n              selectedDate={selectedDate}\n              onSave={addEvent}\n              onCancel={() => {\n                setShowEventForm(false);\n                setEditingEvent(null);\n              }}\n              event={editingEvent}\n            />\n          )}\n          {!showEventForm && (\n            <button \n              className=\"add-event-button\"\n              onClick={() => {\n                setEditingEvent(null);\n                setShowEventForm(true);\n              }}\n            >\n              일정 추가하기\n            </button>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}