{"ast":null,"code":"import React,{useState}from'react';import'../styles/Chatbot.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EVENT_TYPES=[{id:'assignment',label:'과제',defaultColor:'#FF5733'},{id:'exam',label:'시험',defaultColor:'#C70039'},{id:'lecture',label:'강의',defaultColor:'#900C3F'},{id:'meeting',label:'미팅',defaultColor:'#581845'},{id:'academic',label:'학사일정',defaultColor:'#2874A6'},{id:'personal',label:'개인일정',defaultColor:'#229954'}];const DIFFICULTY_COLORS={low:'#4CAF50',// 연한 초록\nmedium:'#2196F3',// 파랑\nhigh:'#F44336'// 빨강\n};const DIFFICULTY_KEYWORDS={high:['어려운','복잡한','심화','고난도','도전적','심층','종합','프로젝트'],medium:['중간','보통','일반','기본'],low:['쉬운','간단한','기초','입문','단순']};const Chatbot=_ref=>{let{onSave}=_ref;const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[extractedInfo,setExtractedInfo]=useState(null);const handleSubmit=e=>{e.preventDefault();if(!inputMessage.trim())return;// 사용자 메시지 추가\nconst newMessages=[...messages,{text:inputMessage,type:'user'}];setMessages(newMessages);// 과제 정보 추출 시도\nconst extracted=extractAssignmentInfo(inputMessage);if(extracted.title!=='알 수 없음'||extracted.deadline!=='알 수 없음'){setExtractedInfo(extracted);}// 봇 응답 추가\nsetTimeout(()=>{setMessages([...newMessages,{text:'과제 정보를 분석했습니다. 추출된 정보를 확인해 주세요.',type:'bot'}]);},500);setInputMessage('');};const handleSaveToCalendar=()=>{if(!extractedInfo)return;const deadlineDate=parseDeadlineDate(extractedInfo.deadline);if(!deadlineDate){alert('마감일 형식이 올바르지 않습니다.');return;}const eventData={title:extractedInfo.title,type:'assignment',date:deadlineDate,time:'23:59',endTime:'23:59',description:\"\\uBC30\\uC810: \".concat(extractedInfo.points,\"\\n\\uC81C\\uCD9C\\uC7A5\\uC18C: \").concat(extractedInfo.location),priority:extractedInfo.suggestedDifficulty,color:DIFFICULTY_COLORS[extractedInfo.suggestedDifficulty]};onSave(eventData);setMessages([...messages,{text:'일정이 캘린더에 저장되었습니다.',type:'bot'}]);setExtractedInfo(null);};const handleEditAndSave=()=>{if(!extractedInfo)return;const deadlineDate=parseDeadlineDate(extractedInfo.deadline);if(!deadlineDate){alert('마감일 형식이 올바르지 않습니다.');return;}const assignmentType=EVENT_TYPES.find(t=>t.id==='assignment');const eventData={title:extractedInfo.title,type:'assignment',date:deadlineDate,time:'23:59',endTime:'23:59',description:\"\\uBC30\\uC810: \".concat(extractedInfo.points,\"\\n\\uC81C\\uCD9C\\uC7A5\\uC18C: \").concat(extractedInfo.location),priority:'high',color:assignmentType.defaultColor};onSave(eventData);setMessages([...messages,{text:'일정이 캘린더에 저장되었습니다.',type:'bot'}]);setExtractedInfo(null);};const parseDeadlineDate=deadlineStr=>{if(!deadlineStr||deadlineStr==='알 수 없음')return null;// 다양한 날짜 형식 처리\nconst patterns=[{regex:/(\\d{4})[-\\/년]\\s*(\\d{1,2})[-\\/월]\\s*(\\d{1,2})일?/,handler:matches=>new Date(matches[1],matches[2]-1,matches[3])},{regex:/(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/,handler:matches=>new Date(matches[3],matches[1]-1,matches[2])},{regex:/(\\d{1,2})월\\s*(\\d{1,2})일/,handler:matches=>{const now=new Date();return new Date(now.getFullYear(),matches[1]-1,matches[2]);}}];for(const{regex,handler}of patterns){const matches=deadlineStr.match(regex);if(matches){return handler(matches);}}return null;};const analyzeDifficulty=text=>{// 점수가 높을수록 어려운 과제\nlet difficultyScore=0;// 키워드 기반 분석\nconst words=text.toLowerCase().split(/[\\s,.]+/);words.forEach(word=>{if(DIFFICULTY_KEYWORDS.high.some(keyword=>word.includes(keyword))){difficultyScore+=2;}else if(DIFFICULTY_KEYWORDS.medium.some(keyword=>word.includes(keyword))){difficultyScore+=1;}else if(DIFFICULTY_KEYWORDS.low.some(keyword=>word.includes(keyword))){difficultyScore-=1;}});// 배점 기반 분석\nconst pointsMatch=text.match(/(\\d+)\\s*점/);if(pointsMatch){const points=parseInt(pointsMatch[1]);if(points>=30)difficultyScore+=2;else if(points>=15)difficultyScore+=1;}// 최종 난이도 결정\nif(difficultyScore>=2)return'high';if(difficultyScore>=0)return'medium';return'low';};const extractAssignmentInfo=text=>{const extracted={title:'알 수 없음',deadline:'알 수 없음',points:'알 수 없음',location:'알 수 없음',suggestedDifficulty:'medium'// 기본값\n};// 제목 추출\nconst titlePatterns=[/과제[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,/제목[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,/[\\[<【](.+?)[\\]>】]/,/^(.+?)(?=과제|assignment|homework)/i];for(const pattern of titlePatterns){const match=text.match(pattern);if(match&&match[1]){extracted.title=match[1].trim();break;}}// 마감일 추출\nconst deadlinePatterns=[/마감일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,/제출일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,/기한[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,/(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)까지/i,/(\\d{1,2}\\/\\d{1,2}\\/?\\d{0,4})/,/(\\d{1,2}월\\s*\\d{1,2}일)/];for(const pattern of deadlinePatterns){const match=text.match(pattern);if(match&&match[1]){extracted.deadline=match[1].trim();break;}}// 배점 추출\nconst pointsPatterns=[/배점[\\s]*[:：]\\s*(\\d+)\\s*점/i,/점수[\\s]*[:：]\\s*(\\d+)\\s*점/i,/(\\d+)\\s*점\\s*만점/i,/(\\d+)\\s*점/i];for(const pattern of pointsPatterns){const match=text.match(pattern);if(match&&match[1]){extracted.points=match[1]+'점';break;}}// 제출 장소 추출\nconst locationPatterns=[/제출[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,/제출처[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,/제출장소[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i];for(const pattern of locationPatterns){const match=text.match(pattern);if(match&&match[1]){extracted.location=match[1].trim();break;}}// 난이도 분석\nextracted.suggestedDifficulty=analyzeDifficulty(text);return extracted;};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.type),children:message.text},index))}),extractedInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"extracted-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uCD94\\uCD9C\\uB41C \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uACFC\\uC81C\\uBA85:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uB9C8\\uAC10\\uC77C:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.deadline})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uBC30\\uC810:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.points})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC81C\\uCD9C\\uC7A5\\uC18C:\"}),/*#__PURE__*/_jsx(\"span\",{children:extractedInfo.location})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uCD94\\uCC9C \\uB09C\\uC774\\uB3C4:\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:DIFFICULTY_COLORS[extractedInfo.suggestedDifficulty]},children:extractedInfo.suggestedDifficulty==='high'?'어려움':extractedInfo.suggestedDifficulty==='medium'?'보통':'쉬움'})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"difficulty-notice\",children:\"\\u203B \\uB09C\\uC774\\uB3C4\\uB294 \\uC790\\uB3D9 \\uCD94\\uCC9C\\uB41C \\uAC83\\uC774\\uBA70, \\uC77C\\uC815 \\uB4F1\\uB85D \\uC2DC \\uC218\\uC815\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"extracted-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"save-extracted-button\",onClick:handleSaveToCalendar,children:\"\\uCE98\\uB9B0\\uB354\\uC5D0 \\uC800\\uC7A5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-extracted-button\",onClick:handleEditAndSave,children:\"\\uC218\\uC815 \\uD6C4 \\uC800\\uC7A5\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"chat-input\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"\\uACFC\\uC81C \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uC804\\uC1A1\"})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","EVENT_TYPES","id","label","defaultColor","DIFFICULTY_COLORS","low","medium","high","DIFFICULTY_KEYWORDS","Chatbot","_ref","onSave","messages","setMessages","inputMessage","setInputMessage","extractedInfo","setExtractedInfo","handleSubmit","e","preventDefault","trim","newMessages","text","type","extracted","extractAssignmentInfo","title","deadline","setTimeout","handleSaveToCalendar","deadlineDate","parseDeadlineDate","alert","eventData","date","time","endTime","description","concat","points","location","priority","suggestedDifficulty","color","handleEditAndSave","assignmentType","find","t","deadlineStr","patterns","regex","handler","matches","Date","now","getFullYear","match","analyzeDifficulty","difficultyScore","words","toLowerCase","split","forEach","word","some","keyword","includes","pointsMatch","parseInt","titlePatterns","pattern","deadlinePatterns","pointsPatterns","locationPatterns","className","children","map","message","index","style","onClick","onSubmit","value","onChange","target","placeholder"],"sources":["C:/Users/hwfre/OneDrive/Desktop/개인/tlqnstjf/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Chatbot.css';\r\n\r\nconst EVENT_TYPES = [\r\n  { id: 'assignment', label: '과제', defaultColor: '#FF5733' },\r\n  { id: 'exam', label: '시험', defaultColor: '#C70039' },\r\n  { id: 'lecture', label: '강의', defaultColor: '#900C3F' },\r\n  { id: 'meeting', label: '미팅', defaultColor: '#581845' },\r\n  { id: 'academic', label: '학사일정', defaultColor: '#2874A6' },\r\n  { id: 'personal', label: '개인일정', defaultColor: '#229954' }\r\n];\r\n\r\nconst DIFFICULTY_COLORS = {\r\n  low: '#4CAF50',    // 연한 초록\r\n  medium: '#2196F3', // 파랑\r\n  high: '#F44336'    // 빨강\r\n};\r\n\r\nconst DIFFICULTY_KEYWORDS = {\r\n  high: ['어려운', '복잡한', '심화', '고난도', '도전적', '심층', '종합', '프로젝트'],\r\n  medium: ['중간', '보통', '일반', '기본'],\r\n  low: ['쉬운', '간단한', '기초', '입문', '단순']\r\n};\r\n\r\nconst Chatbot = ({ onSave }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [extractedInfo, setExtractedInfo] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!inputMessage.trim()) return;\r\n\r\n    // 사용자 메시지 추가\r\n    const newMessages = [...messages, { text: inputMessage, type: 'user' }];\r\n    setMessages(newMessages);\r\n\r\n    // 과제 정보 추출 시도\r\n    const extracted = extractAssignmentInfo(inputMessage);\r\n    if (extracted.title !== '알 수 없음' || extracted.deadline !== '알 수 없음') {\r\n      setExtractedInfo(extracted);\r\n    }\r\n\r\n    // 봇 응답 추가\r\n    setTimeout(() => {\r\n      setMessages([...newMessages, {\r\n        text: '과제 정보를 분석했습니다. 추출된 정보를 확인해 주세요.',\r\n        type: 'bot'\r\n      }]);\r\n    }, 500);\r\n\r\n    setInputMessage('');\r\n  };\r\n\r\n  const handleSaveToCalendar = () => {\r\n    if (!extractedInfo) return;\r\n\r\n    const deadlineDate = parseDeadlineDate(extractedInfo.deadline);\r\n    if (!deadlineDate) {\r\n      alert('마감일 형식이 올바르지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    const eventData = {\r\n      title: extractedInfo.title,\r\n      type: 'assignment',\r\n      date: deadlineDate,\r\n      time: '23:59',\r\n      endTime: '23:59',\r\n      description: `배점: ${extractedInfo.points}\\n제출장소: ${extractedInfo.location}`,\r\n      priority: extractedInfo.suggestedDifficulty,\r\n      color: DIFFICULTY_COLORS[extractedInfo.suggestedDifficulty]\r\n    };\r\n\r\n    onSave(eventData);\r\n    setMessages([...messages, {\r\n      text: '일정이 캘린더에 저장되었습니다.',\r\n      type: 'bot'\r\n    }]);\r\n    setExtractedInfo(null);\r\n  };\r\n\r\n  const handleEditAndSave = () => {\r\n    if (!extractedInfo) return;\r\n\r\n    const deadlineDate = parseDeadlineDate(extractedInfo.deadline);\r\n    if (!deadlineDate) {\r\n      alert('마감일 형식이 올바르지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    const assignmentType = EVENT_TYPES.find(t => t.id === 'assignment');\r\n    const eventData = {\r\n      title: extractedInfo.title,\r\n      type: 'assignment',\r\n      date: deadlineDate,\r\n      time: '23:59',\r\n      endTime: '23:59',\r\n      description: `배점: ${extractedInfo.points}\\n제출장소: ${extractedInfo.location}`,\r\n      priority: 'high',\r\n      color: assignmentType.defaultColor\r\n    };\r\n\r\n    onSave(eventData);\r\n    setMessages([...messages, {\r\n      text: '일정이 캘린더에 저장되었습니다.',\r\n      type: 'bot'\r\n    }]);\r\n    setExtractedInfo(null);\r\n  };\r\n\r\n  const parseDeadlineDate = (deadlineStr) => {\r\n    if (!deadlineStr || deadlineStr === '알 수 없음') return null;\r\n\r\n    // 다양한 날짜 형식 처리\r\n    const patterns = [\r\n      {\r\n        regex: /(\\d{4})[-\\/년]\\s*(\\d{1,2})[-\\/월]\\s*(\\d{1,2})일?/,\r\n        handler: (matches) => new Date(matches[1], matches[2] - 1, matches[3])\r\n      },\r\n      {\r\n        regex: /(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/,\r\n        handler: (matches) => new Date(matches[3], matches[1] - 1, matches[2])\r\n      },\r\n      {\r\n        regex: /(\\d{1,2})월\\s*(\\d{1,2})일/,\r\n        handler: (matches) => {\r\n          const now = new Date();\r\n          return new Date(now.getFullYear(), matches[1] - 1, matches[2]);\r\n        }\r\n      }\r\n    ];\r\n\r\n    for (const { regex, handler } of patterns) {\r\n      const matches = deadlineStr.match(regex);\r\n      if (matches) {\r\n        return handler(matches);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const analyzeDifficulty = (text) => {\r\n    // 점수가 높을수록 어려운 과제\r\n    let difficultyScore = 0;\r\n    \r\n    // 키워드 기반 분석\r\n    const words = text.toLowerCase().split(/[\\s,.]+/);\r\n    words.forEach(word => {\r\n      if (DIFFICULTY_KEYWORDS.high.some(keyword => word.includes(keyword))) {\r\n        difficultyScore += 2;\r\n      } else if (DIFFICULTY_KEYWORDS.medium.some(keyword => word.includes(keyword))) {\r\n        difficultyScore += 1;\r\n      } else if (DIFFICULTY_KEYWORDS.low.some(keyword => word.includes(keyword))) {\r\n        difficultyScore -= 1;\r\n      }\r\n    });\r\n\r\n    // 배점 기반 분석\r\n    const pointsMatch = text.match(/(\\d+)\\s*점/);\r\n    if (pointsMatch) {\r\n      const points = parseInt(pointsMatch[1]);\r\n      if (points >= 30) difficultyScore += 2;\r\n      else if (points >= 15) difficultyScore += 1;\r\n    }\r\n\r\n    // 최종 난이도 결정\r\n    if (difficultyScore >= 2) return 'high';\r\n    if (difficultyScore >= 0) return 'medium';\r\n    return 'low';\r\n  };\r\n\r\n  const extractAssignmentInfo = (text) => {\r\n    const extracted = {\r\n      title: '알 수 없음',\r\n      deadline: '알 수 없음',\r\n      points: '알 수 없음',\r\n      location: '알 수 없음',\r\n      suggestedDifficulty: 'medium' // 기본값\r\n    };\r\n\r\n    // 제목 추출\r\n    const titlePatterns = [\r\n      /과제[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,\r\n      /제목[\\s]*[:：]\\s*(.+?)(?=\\n|마감|제출|배점|점수)/i,\r\n      /[\\[<【](.+?)[\\]>】]/,\r\n      /^(.+?)(?=과제|assignment|homework)/i\r\n    ];\r\n\r\n    for (const pattern of titlePatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.title = match[1].trim();\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 마감일 추출\r\n    const deadlinePatterns = [\r\n      /마감일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,\r\n      /제출일?[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,\r\n      /기한[\\s]*[:：]\\s*(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)/i,\r\n      /(\\d{4}[-\\/년]\\s*\\d{1,2}[-\\/월]\\s*\\d{1,2}일?)까지/i,\r\n      /(\\d{1,2}\\/\\d{1,2}\\/?\\d{0,4})/,\r\n      /(\\d{1,2}월\\s*\\d{1,2}일)/\r\n    ];\r\n\r\n    for (const pattern of deadlinePatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.deadline = match[1].trim();\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 배점 추출\r\n    const pointsPatterns = [\r\n      /배점[\\s]*[:：]\\s*(\\d+)\\s*점/i,\r\n      /점수[\\s]*[:：]\\s*(\\d+)\\s*점/i,\r\n      /(\\d+)\\s*점\\s*만점/i,\r\n      /(\\d+)\\s*점/i\r\n    ];\r\n\r\n    for (const pattern of pointsPatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.points = match[1] + '점';\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 제출 장소 추출\r\n    const locationPatterns = [\r\n      /제출[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,\r\n      /제출처[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i,\r\n      /제출장소[\\s]*[:：]\\s*(.+?)(?=\\n|$)/i\r\n    ];\r\n\r\n    for (const pattern of locationPatterns) {\r\n      const match = text.match(pattern);\r\n      if (match && match[1]) {\r\n        extracted.location = match[1].trim();\r\n        break;\r\n      }\r\n    }\r\n\r\n    // 난이도 분석\r\n    extracted.suggestedDifficulty = analyzeDifficulty(text);\r\n\r\n    return extracted;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot\">\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.type}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {extractedInfo && (\r\n        <div className=\"extracted-info\">\r\n          <h4>추출된 정보</h4>\r\n          <div className=\"info-grid\">\r\n            <div className=\"info-item\">\r\n              <label>과제명:</label>\r\n              <span>{extractedInfo.title}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>마감일:</label>\r\n              <span>{extractedInfo.deadline}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>배점:</label>\r\n              <span>{extractedInfo.points}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>제출장소:</label>\r\n              <span>{extractedInfo.location}</span>\r\n            </div>\r\n            <div className=\"info-item\">\r\n              <label>추천 난이도:</label>\r\n              <span style={{ color: DIFFICULTY_COLORS[extractedInfo.suggestedDifficulty] }}>\r\n                {extractedInfo.suggestedDifficulty === 'high' ? '어려움' :\r\n                 extractedInfo.suggestedDifficulty === 'medium' ? '보통' : '쉬움'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <p className=\"difficulty-notice\">\r\n            ※ 난이도는 자동 추천된 것이며, 일정 등록 시 수정할 수 있습니다.\r\n          </p>\r\n          <div className=\"extracted-actions\">\r\n            <button \r\n              className=\"save-extracted-button\"\r\n              onClick={handleSaveToCalendar}\r\n            >\r\n              캘린더에 저장\r\n            </button>\r\n            <button \r\n              className=\"edit-extracted-button\"\r\n              onClick={handleEditAndSave}\r\n            >\r\n              수정 후 저장\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <form className=\"chat-input\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          placeholder=\"과제 정보를 입력하세요...\"\r\n        />\r\n        <button type=\"submit\">전송</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}